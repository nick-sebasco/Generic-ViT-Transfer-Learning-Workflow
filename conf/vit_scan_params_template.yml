#path to directory of zarrs converted from slides
image_dir: "" #no good way to set a default on these...

#path to directory of zarrs storing the ViT feature representstion
feature_dir: "" #no good way to set a default on these...

# NEW:
# e.g., "" or "_reinhard".  Adding this to prevent overwriting 
# previously computed features.
feature_tag: "_normal"

#path to directory of zarrs storing ROI masks of the slides
roi_mask_dir: "" #no good way to set a default on these...

#label indicating which ROI mask should be used to determine the regions to scan 
roi_type: "GreenThresh"

#minimum required area in number of pixels for an object to be scanned 
roi_min_area: 40000

#maximum permitted area in number of pixels for an object to be scanned (0 indicates no max)
roi_max_area: 0

#numper of channels output by the headless ViT
vit_model_channels: 1280

#size of step between scan patches
scan_step: 490

#number of patches per batch
batch_size: 10

#number of batches to be handeled by each scan process
scan_group_size: 3

#number of times to downsample befor scanning (scan patch will be 1/2^(scan_ds) the resolution of the initial image)
scan_ds: 0

#number of times downssampled before identifying the regions to be scanned
roi_mask_ds: 4

#flag indicating if the whole image should be scanned ignoring ROIs
complete_scan: False

#flag indicating if existing ROIs should be recomputed
compute_rois: True

#what model to use for identifying ROIs if not precomputed and compute_rois
roi_identifier_model: GreenThresh

#Threshold for simple ROI detection models pixels with higer intensity will be considered background
roi_thresh: .8

#size of input to the model
patch_size: 518

#path to .pth file with alternate weights
model_checkpoint: "" #no good way to set a default on these...

#target torch device, must be one of ['auto', 'cuda', 'cpu']
device: auto

#create a mask of which patches have been scanned (useful for sanity checking the scan)
#DEPRICIATED MUST BE TRUE FOR DOWNSTREAM STEPS & ZARR V3 WILL ALEVIATE EFFICENCY CONCERNS ONCE IMPLEMENTED 
scan_mask : true

# --- stain normalization (optional) ---
# turn on/off
apply_normalization: false
# for future extensibility
normalization_method: reinhard

# TODO: How do we choose a good stain reference?  Inclination to reference NW.
# Can we select reference based on skin score.
# manually set path to reference image stain zarr e.g. /.../Zarrs/REF_IMAGE.zarr
normalization_ref_zarr: ""
# manually set path to roi mask correspomnding to normalization_ref_zarr e.g. /.../ROIZarrs/roi_masks_REF_IMAGE.zarr
# NOTE: if you don't include this you will end up normalizing the slide background
normalization_ref_roi_zarr: ""

# ds key inside ref image zarr (can reuse scan ds key if you want)
normalization_ref_ds: "0/6"
normalization_ref_roi_type: "GreenThresh"
normalization_ref_roi_ds: 4
# reference patch size for fit()
normalization_ref_size: 512
# random | median
normalization_ref_strategy: random
# 0 = per-patch normalization (fastest to wire in); >0 = tile size if you later normalize bigger tiles
normalization_tile: 0

# --- Low resolution PNG for stain normalization debugging ---
# By default per workflow run we save: every nornmalized target zarr as a png
# and the reference zarr.  if `save_raw_target_png` is set to true, then the
# un-normalized target will also be saved as a png.
save_raw_target_png: false

# Directory to write the PNGs (created if it does not exist).
normalization_png_dir: ""

# TODO: would like to replace `normalization_png_ds` with max_dim (pixels) or ong_size (bytes)
# instead of normalization_png_ds. (ALready got rid of it)

